buildvariants:
- display_name: Ubuntu 18.04
  name: ubuntu1804
  run_on:
  - ubuntu1804-small
  tasks:
  - name: unit_tests
  - name: deploy
  - name: documentation
  - name: evg_api_install

functions:
  create virtualenv:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        export LC_ALL=C.UTF-8
        export LANG=C.UTF-8

        virtualenv --python=python3 venv
        . venv/bin/activate
        pip install poetry
        poetry install

  deploy:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          . venv/bin/activate

          if [ "${is_patch}" = "true" ]; then
            # Do not deploy on patches.
            exit 0
          fi

          poetry publish --build --username ${pypi_user} --password ${pypi_password}

  build_docs:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          . venv/bin/activate

          poetry run sphinx-apidoc -o docs/source src "*cli*"
          poetry run sphinx-build -W docs/source docs/build
          git clean -d -f

  publish_docs:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          . venv/bin/activate

          if [ "${is_patch}" = "true" ]; then
            # Do not deploy on patches.
            exit 0
          fi

          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8

          poetry run gh-pusher --build-dir docs/build


pre:
- command: git.get_project
  params:
    directory: src
- func: create virtualenv

post:
- command: attach.xunit_results
  params:
    file: src/junit-*.xml

tasks:
- name: unit_tests
  commands:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        export LC_ALL=C.UTF-8
        export LANG=C.UTF-8

        . venv/bin/activate

        RUN_SLOW_TESTS=1 poetry run pytest --cov=src --junitxml=junit-test-output.xml

- name: evg_api_install
  commands:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        export LC_ALL=C.UTF-8
        export LANG=C.UTF-8

        /opt/mongodbtoolchain/v3/bin/python3 -m venv evg-api-cli-venv
        . evg-api-cli-venv/bin/activate

        pip install --upgrade pip
        pip install .

        evg-api --help

- name: deploy
  patchable: false
  depends_on:
    - name: unit_tests
  commands:
    - func: deploy

- name: documentation
  depends_on:
    - name: unit_tests
  commands:
    - func: build_docs
    - func: publish_docs
