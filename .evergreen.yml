buildvariants:
- display_name: Python 3.9
  name: cp39
  run_on:
  - ubuntu2404-small
  expansions:
    python_toolchain: /opt/python/3.9
  tasks:
  - name: unit_tests
  - name: evg_api_install

- display_name: Python 3.10
  name: cp310
  run_on:
  - ubuntu2404-small
  expansions:
    python_toolchain: /opt/python/3.10
  tasks:
  - name: unit_tests
  - name: evg_api_install

- display_name: Python 3.11
  name: cp311
  run_on:
  - ubuntu2404-small
  expansions:
    python_toolchain: /opt/python/3.11
  tasks:
  - name: unit_tests
  - name: deploy
  - name: documentation
  - name: evg_api_install

- display_name: Python 3.12
  name: cp312
  run_on:
  - ubuntu2404-small
  expansions:
    python_toolchain: /opt/python/3.12
  tasks:
  - name: unit_tests
  - name: evg_api_install

- display_name: Python 3.13
  name: cp313
  run_on:
  - ubuntu2404-small
  expansions:
    python_toolchain: /opt/python/3.13
  tasks:
  - name: unit_tests
  - name: evg_api_install

functions:
  create virtualenv:
    - command: subprocess.exec
      params:
        command: "sh -c 'curl -sSL https://install.python-poetry.org | python3 -'"
        env:
          POETRY_HOME: ${workdir}/poetry
          POETRY_VERSION: '2.1.4'
    - command: subprocess.exec
      params:
        command: ${workdir}/poetry/bin/poetry env use ${python_toolchain}/bin/python3
        working_dir: src
        env:
          POETRY_VIRTUALENVS_PATH: ${workdir}/venv
    - command: subprocess.exec
      params:
        command: ${workdir}/poetry/bin/poetry install
        working_dir: src
        env:
          POETRY_VIRTUALENVS_PATH: ${workdir}/venv

  deploy:
    - command: subprocess.exec
      params:
        command: ${workdir}/poetry/bin/poetry publish --build --username ${pypi_user} --password ${pypi_password}
        working_dir: src
        env:
          POETRY_VIRTUALENVS_PATH: ${workdir}/venv

pre:
- command: github.generate_token
  params:
    expansion_name: GH_TOKEN
- command: git.get_project
  params:
    directory: src
    token: ${GH_TOKEN}
- func: create virtualenv
pre_error_fails_task: true

post:
- command: attach.xunit_results
  params:
    file: src/junit-*.xml

tasks:
- name: unit_tests
  commands:
  - command: subprocess.exec
    params:
      working_dir: src
      command: ${workdir}/poetry/bin/poetry run pytest --cov=src --junitxml=junit-test-output.xml
      env:
        RUN_SLOW_TESTS: '1'
        POETRY_VIRTUALENVS_PATH: ${workdir}/venv

- name: evg_api_install
  commands:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -eu

        ${python_toolchain}/bin/python3 -m venv evg-api-cli-venv
        . evg-api-cli-venv/bin/activate

        pip install --upgrade pip
        pip install .

        evg-api --help

- name: deploy
  patchable: false
  depends_on:
    - name: unit_tests
  commands:
    - func: deploy
